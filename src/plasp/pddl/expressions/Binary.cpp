#include <plasp/pddl/expressions/Binary.h>

#include <algorithm>

#include <plasp/pddl/Context.h>
#include <plasp/pddl/ExpressionVisitor.h>
#include <plasp/pddl/Identifier.h>

namespace plasp
{
namespace pddl
{
namespace expressions
{

////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Binary
//
////////////////////////////////////////////////////////////////////////////////////////////////////

const Expression *Binary::leftArgument() const
{
	return m_leftArgument.get();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

const Expression *Binary::rightArgument() const
{
	return m_rightArgument.get();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

}
}
}
