#ifndef __PLASP__PDDL__EITHER_TYPE_H
#define __PLASP__PDDL__EITHER_TYPE_H

#include <vector>

#include <plasp/pddl/PrimitiveType.h>
#include <plasp/utils/Parser.h>

namespace plasp
{
namespace pddl
{

////////////////////////////////////////////////////////////////////////////////////////////////////
//
// EitherType
//
////////////////////////////////////////////////////////////////////////////////////////////////////

class Context;

////////////////////////////////////////////////////////////////////////////////////////////////////

class EitherType
{
	public:
		static EitherType &parse(utils::Parser &parser, Context &context);

	public:
		const std::vector<const PrimitiveType *> &allowedTypes() const;

	private:
		EitherType() = default;

		std::vector<const PrimitiveType *> m_allowedTypes;
};

////////////////////////////////////////////////////////////////////////////////////////////////////

}
}

#endif
